"""Initial migration with all models

Revision ID: 1ea621c11000
Revises: 
Create Date: 2025-09-26 11:09:33.329246

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1ea621c11000'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_expense_recurring_payment_id'))
        batch_op.drop_constraint(batch_op.f('fk_expense_recurring_payment'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'recurring_payment', ['recurring_payment_id'], ['id'])

    with op.batch_alter_table('recurring_payment', schema=None) as batch_op:
        batch_op.alter_column('next_due_date',
               existing_type=sa.DATE(),
               nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               nullable=False)
        batch_op.drop_constraint(batch_op.f('user_email_key'), type_='unique')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('user_email_key'), ['email'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               nullable=True)

    with op.batch_alter_table('recurring_payment', schema=None) as batch_op:
        batch_op.alter_column('next_due_date',
               existing_type=sa.DATE(),
               nullable=True)

    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_expense_recurring_payment'), 'recurring_payment', ['recurring_payment_id'], ['id'], ondelete='SET NULL')
        batch_op.create_index(batch_op.f('idx_expense_recurring_payment_id'), ['recurring_payment_id'], unique=False)

    # ### end Alembic commands ###
